import axios from 'axios';
import React, { useState, useEffect } from 'react'
import $ from 'jquery'
import { message, Table, Switch } from 'antd';
import { TiTick } from "react-icons/ti";
import { ImCross } from "react-icons/im";
import DemoImage from '../../img/demoImage.png'
import { Token } from '../../config/Config';
import { Link } from "react-router-dom";


function VahiclePage() {

    // Token 
    const token = Token().token;
    // const url = PathUrl().urlData.development;
    const url = 'http://52.91.235.134/api'

    // For Menu Auto Generate Id 

    // For Category Auto Generate Id 
    const categoryAutoGenerated = Math.floor(Math.random() * 99999999) + 10000000;

    const [menu, setMenu] = useState(true);

    const [menuDataList, setMenuDataList] = useState('');


    const [categoryDataList, setCategoryDataList] = useState('');

    useEffect(() => {
        MenuList()
        CategoryList()
    }, [])

    // For Category Form Data 
    let [categoryData, setCategoryData] = useState({
        generated_id: categoryAutoGenerated,
        name: '',
    });



    // For Update Category Form Data 
    let [updateCategoryData, setUpdateCategoryData] = useState({
        UpdateGenerated_id: "",
        UpdateName: '',
    });

    // For Menu 
    const MenuList = () => {
        axios.get(`${url}/menu`, { headers: { Authorization: 'Bearer ' + token } })
            .then((response) => {

                setMenuDataList(response.data)
                console.log(response.data);
            })
            .catch((error) => {
                console.error(error);
            });
    }

    const MenuColumn = [
        {
            title: 'Vehicle Name',
            dataIndex: 'image',
            key: 'name',
            sorter: {
                compare: (a, b) => a.name - b.name,
                multiple: 3,
            },
            render: (text, record) => (
                <span>{(record.image ? <span> <img alt='Menu_image' src={record.image} style={{ width: "30px", height: "30px", borderRadius: "25px" }} /> </span> : <span> <img alt='demo_image' src={DemoImage} style={{ width: "100px" }} /></span>)}Vehicle Name</span>
            )
        },
        {
            title: 'Car Brand',
            dataIndex: 'generated_id',
            key: 'id',
            sorter: {
                compare: (a, b) => a.generated_id - b.generated_id,
                multiple: 3,
            }
        },


        {
            title: 'Car Year',
            dataIndex: 'name',
            key: 'name',
            sorter: {
                compare: (a, b) => a.name - b.name,
                multiple: 3,
            }
        },
        {
            title: 'Price Per KM',
            dataIndex: 'name',
            key: 'name',
            sorter: {
                compare: (a, b) => a.name - b.name,
                multiple: 3,
            }
        },
        {
            title: 'Driver Charges ',
            dataIndex: 'name',
            key: 'name',
            sorter: {
                compare: (a, b) => a.name - b.name,
                multiple: 3,
            }
        },
        {
            title: 'Action',
            dataIndex: 'image',
            key: 'name',
            sorter: {
                compare: (a, b) => a.name - b.name,
                multiple: 3,
            },
            render: (text, record) => (
                <span>
                  <Link to="/Admin/vahicle-view">
                <i className="fa fa-eye p-2  rounded-circle " style={{ color: 'white', backgroundColor: 'black' }} id={record.id} ></i>
                </Link>
                    <span className="p-2  rounded-circle "><Switch defaultChecked style={{ color: 'white', backgroundColor: 'black' }} id={record.id} onClick={MenuEdit} /></span><i className="fa fa-trash p-2  rounded-circle " style={{ color: 'white', backgroundColor: 'black' }} id={record.id} onClick={MenuDelete}></i></span>
            )
        },
    ]
    const MenuView = (e) => {
        alert(e.target.id)
    }

    const MenuEdit = (e) => {
        alert(e.target.id)

    }

    const MenuDelete = (e) => {
        axios.post(`${url}/MenuDelete`, { id: e.target.id }, { headers: { Authorization: 'Bearer ' + token } })
            .then((response) => {
                setMenuDataList(response.data)
                message.success('Menu Deleted Successfully..!!');
            })
            .catch((error) => {
                console.error(error);
            });


    }


    // For Category 

    const CategoryList = () => {
        axios.get(`${url}/category`, { headers: { Authorization: 'Bearer ' + token } })
            .then((response) => {

                setCategoryDataList(response.data)
                console.log(response.data);
            })
            .catch((error) => {
                console.error(error);
            });
    }


    const CategoryView = (e) => {
        alert(e.target.id)
    }
    const [updateGeneratedId, setUpdateGeneratedId] = useState("");
    const CategoryEdit = (e) => {

        $('#categoryModalBtn').trigger('click');
        axios.post(`${url}/Edit`, { id: e.target.id }, { headers: { Authorization: 'Bearer ' + token } })
            .then((response) => {

                setUpdateGeneratedId(response.data.generated_id);
                $("#updatedCategoryName").val(response.data.name);

                // setCategoryDataList(response.data)
            })
            .catch((error) => {
                console.error(error);
            });

    }

    const CategoryDelete = (e) => {
        axios.post(`${url}/CatDelete`, { id: e.target.id }, { headers: { Authorization: 'Bearer ' + token } })
            .then((response) => {
                setCategoryDataList(response.data)
                message.success('Category Deleted Successfully..!!');
            })
            .catch((error) => {
                console.error(error);
            });

    }


    return (
        <>
            <div id="content-wrapper" className="d-flex flex-column">

                {/* <!-- Main Content --> */}
                <div id="content">
                    {
                        menu && (<div className="container-fluid ">
                            <div className="row">
                                <div className="col-md-12 col-lg-12 col-sm-12 ">
                                    <div className="row py-4 bg-white border rounded my-4">
                                        <div className="col-md-4 col-lg-4 col-sm-12 ">
                                            <div class="input-group mb-3">
                                                <span class="input-group-text " id="basic-addon1"><i className="fa fa-search"></i></span>
                                                <input type="text" class=" form-control" placeholder="Search By name" aria-label="Username" aria-describedby="basic-addon1" />
                                            </div>
                                        </div>
                                      
                                    </div>
                                    <Table dataSource={menuDataList} columns={MenuColumn} pagination={{ defaultPageSize: 5, showSizeChanger: true, pageSizeOptions: ['05', '10', '20', '30'] }} />
                                </div>
                            </div>
                        </div>)
                    }
                </div>
            </div>

        </>
    )
}

export default VahiclePage
